#define INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}"
#define UNITY_2D_DIR "${UNITY_2D_DIR}"
#define UNITY_DIR "${UNITY_DIR}"

#include <QCoreApplication>
#include <stdio.h>

inline bool isRunningInstalled() {
    static bool cachedResult = QCoreApplication::applicationDirPath() == INSTALL_PREFIX "/bin";
    return cachedResult;
}

inline QString unity2dDirectory() {
    if (isRunningInstalled()) {
        return QString(INSTALL_PREFIX "/" UNITY_2D_DIR);
    } else {
        return QString(QCoreApplication::applicationDirPath()+"/../../");
    }
}

inline QString unity2dImportPath() {
    if (isRunningInstalled()) {
        return QString(INSTALL_PREFIX "/lib/qt4/imports");
    } else {
        return QString(QCoreApplication::applicationDirPath()+"/../");
    }
}

inline void globalMessageHandler(QtMsgType type, const char *message)
{
    switch (type) {
        case QtDebugMsg:
            fprintf(stderr, "%s: [DEBUG] %s\n", qPrintable(QCoreApplication::applicationName()), message);
            break;
        case QtWarningMsg:
            fprintf(stderr, "%s: [WARNING] %s\n", qPrintable(QCoreApplication::applicationName()), message);
            break;
        case QtCriticalMsg:
            fprintf(stderr, "%s: [CRITICAL] %s\n", qPrintable(QCoreApplication::applicationName()), message);
            break;
        case QtFatalMsg:
            fprintf(stderr, "%s: [FATAL] %s\n", qPrintable(QCoreApplication::applicationName()), message);
            abort();
    }
}
